  - name: Servarr
    # width: slim
    center-vertically: true
    columns:
    - size: small
      widgets:
        - type: bookmarks
          hide-header: true
          groups:
            - title: Resources
              hide-arrow: true
              links:
              - title: Dictionarry
                url: https://dictionarry.dev
                icon: ../assets/icons/servarr.png
              - title: Servarr Wiki
                url: https://wiki.servarr.com/
                icon: ../assets/icons/servarr.png

            - title: Sources
              hide-arrow: true
              links:
                - title: All
                  url: https://thepiratebay.org/
                  icon: ../assets/icons/the-pirate-bay.png
                - title: Movies
                  url: https://yts.mx/browse-movies/film/all/all/0/latest/0/all
                  icon: ../assets/icons/yts.png
                - title: EzTv
                  url: https://eztvx.to/home
                  icon: ../assets/icons/eztvit.png
                - title: IP-TV
                  url: https://github.com/iptv-org/iptv/blob/master/PLAYLISTS.md
                  icon: ../assets/icons/utorrent.png     
                - title: Bandcamp
                  url: https://bandcamp.com
                  icon: ../assets/icons/bandcamp.png
                - title: nzbgeek
                  url: https://nzbgeek.info
                  icon: ../assets/icons/nzbgeek.png
                - title: giganews
                  url: https://www.giganews.com/
                  icon: ../assets/icons/nzb-dav.png
                - title: MusicBrainz
                  url: https://musicbrainz.org/search
                  icon: ../assets/icons/musicbrainz.png   

        - type: custom-api
          title: Movie Releases
          title-url: ${RADARR_URL}
          cache: 30m
          options:
            service: radarr          # sonarr, radarr, or lidarr
            type: upcoming           # upcoming, recent, or missing
            size: small             # small, medium, large, or huge
            collapse-after: 3
            show-grabbed: false
            interval: 20             # optional, days
            #sort-time: asc          # optional, asc or desc (default)
            #cover-proxy: "https://proxy.example.com/radarrcover" # optional
            api-base-url: ${RADARR_API_URL}
            key: ${RADARR_KEY}
            url: ${RADARR_URL}       # optional
          template: |
           {{ $collapseAfter := .Options.IntOr "collapse-after" 5 }}
           {{ $showGrabbed := .Options.BoolOr "show-grabbed" false }}
           {{ $sortTime := .Options.StringOr "sort-time" "desc" }}
           {{ $coverProxy := .Options.StringOr "cover-proxy" "" }}
           {{ $size := .Options.StringOr "size" "medium" }}
           {{ $service := .Options.StringOr "service" "" }}
           {{ $type := .Options.StringOr "type" "" }}
           {{ $intervalH := .Options.IntOr "interval" 0 | mul 24 }}

           {{ $now := now | formatTime "2006-01-02T15:04:05" }}
           {{ $posInterval := (offsetNow (printf "+%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}
           {{ $negInterval := (offsetNow (printf "-%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}

           {{ $apiBaseUrl := .Options.StringOr "api-base-url" "" }}
           {{ $key := .Options.StringOr "key" "" }}
           {{ $url := .Options.StringOr "url" $apiBaseUrl }}

           {{ if or (and (ne $service "sonarr") (ne $service "radarr") (ne $service "lidarr"))
                    (and (ne $type "upcoming") (ne $type "recent") (ne $type "missing")) 
                    (eq $apiBaseUrl "") (eq $key "") (eq $url "") }}
             <div class="widget-error-header">
                 <div class="color-negative size-h3">ERROR</div>
                 <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
                   <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
                 </svg>
               </div>
               <p class="break-all">
                 Some options are not set or malformed
                   <table style="border-spacing: 1rem;">
                     <tr><td>service</td><td>{{ $service }}</td><td>must be sonarr, radarr, or lidarr</td></tr>
                     <tr><td>type</td><td>{{ $type }}</td><td>must be upcoming, recent, or missing</td></tr>
                     <tr><td>api-base-url</td><td>{{ $apiBaseUrl }}</td><td>should include http(s):// and port if needed</td></tr>
                     <tr><td>key</td><td>{{ $key }}</td><td></td></tr>
                   </table> 
               </p>
           {{ else }}
             {{ $requestUrl := "" }}
  
             {{ if eq $service "sonarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeSeries=true&includeEpisode=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50&includeSeries=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?includeSeries=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "radarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeMovie=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "lidarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v1/history/since?includeArtist=true&includeAlbum=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v1/wanted/missing?page=1&pageSize=50&includeArtist=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v1/calendar?includeArtist=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
             {{ end }}
  
             {{ $data := newRequest $requestUrl
               | withHeader "Accept" "application/json"
               | withHeader "X-Api-Key" $key
               | getResponse }}
  
             <ul class="list list-gap-14 collapsible-container single-line-titles" data-collapse-after="{{ $collapseAfter }}">
               {{ $array := "" }}
               {{ $sortByField := "" }}
               {{ $itemDisplayed := false }}
               {{ $itemDate := "" }}
               {{ $isAvailable := false }}
  
               {{ if eq $type "missing" }}
                 {{ $array = "records" }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ else if eq $type "recent" }}
                 {{ $sortByField = "date" }}
               {{ else }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ end }}
  
               {{ range $data.JSON.Array $array | sortByTime $sortByField "rfc3339" $sortTime }}
                  
                 {{ if eq $service "sonarr" }}
                   {{ $itemDate = .String "airDateUtc" | parseTime "RFC3339" }}
                   {{ $itemDate = $itemDate.In now.Location | formatTime "2006-01-02T15:04:05" }}
                   {{ $isAvailable = true }}
                 {{ else if eq $service "radarr"}}
                   {{ $isAvailable = .Bool "isAvailable" }}
                   {{ $itemDate = .String "releaseDate" }}
                 {{ else if eq $service "lidarr"}}
                   {{ $itemDate = .String "releaseDate" }}
                   {{ $isAvailable = true }}
                 {{ end }}
  
                 {{ if or (eq $type "upcoming") (eq $type "recent") (and (or (and (gt $itemDate $negInterval) ((lt $itemDate $now ))) (eq $intervalH 0))  $isAvailable) }}
                   {{ $itemDisplayed = true }}
                   {{ $title := "" }}
                   {{ $subtitle := "" }}
                   {{ $coverUrl := "" }}
                   {{ $status := "" }}
                   {{ $coverBase := "" }}
                   {{ $height := "" }}
                   {{ $width := "" }}
                   {{ $popoverTitle := "" }}
                   {{ $popoverSubtitle := "" }}
                   {{ $popoverSummary := "" }}
                   {{ $summary := "" }}
                   {{ $link := "" }}
                   {{ $grabbed := false }}
                   {{ $date := now }}
                   {{ $datetype := "" }}
                   {{ $seString := "" }}
                   {{ $genres := "" }}
                   {{ $buttonJustify := "left" }}
  
           
                   {{ if eq $service "sonarr" }}
                     {{ $series := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "seriesId") $key }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "seriesId") }}
                     {{ end }}
                     {{ $title = .String "series.title" }}
                     {{ $link = printf "%s/series/%s#" $url (.String "series.titleSlug") }}
                     {{ $series = .Get "series" }}
                     {{ $genres = $series.Get "genres" }}
                    
                     {{ if eq $type "recent" }}
                       {{ $date = .String "date" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "episode.title" }}
                       {{ $summary = .String "episode.overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "episode.seasonNumber") (.Int "episode.episodeNumber") }}
                       {{ $datetype = "Downloaded" }}
               
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "episode.title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "episode.overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
           
                     {{ else if eq $type "missing" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Aired" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ else if eq $type "upcoming" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Airs" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ end }}
               
               
                   {{ else if eq $service "radarr" }}
                     {{ $movie := "" }}
                     {{ $status = .String "status" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
                     {{ if eq $status "announced"}}
                       {{ if ne (.String "inCinemas") "" }}
                         {{ $date = (.String "inCinemas" | parseTime "RFC3339") }}
                         {{ $datetype = "In Cinemas" }}
                       {{ else }}
                         {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                     {{ else if eq $status "inCinemas"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Releases" }}
                     {{ else if eq $status "released"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Released" }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "movie.id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "movie.id") }}
                       {{ end }}
                       {{ $datetype = "Downloaded" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $title = .String "movie.title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "movie.overview" }}
                       {{ $popoverTitle = .String "movie.title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "movie.overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "movie.titleSlug") }}
                       {{ $movie = .Get "movie" }}
                       {{ $genres = $movie.Get "genres" }}
                       {{ if and $showGrabbed (gt (.Int "movie.movieFileId") 0) }}
                         {{ $grabbed = true }}
                       {{ end }}
                     {{ else }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "id") }}
                       {{ end }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "titleSlug") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "overview" }}
                       {{ $genres = .Get "genres" }}
                       {{ if eq $type "missing" }}
                         {{ if and $showGrabbed (.Bool "movie.hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ if and $showGrabbed (.Bool "hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ end }}
                     {{ end }}
  
               
                   {{ else if eq $service "lidarr" }}
                     {{ $artist := "" }}
                     {{ $album := "" }}
                     {{ $albumId := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v1/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ $album = .Get "album" }}
                       {{ $artist = $album.Get "artist" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase (.String "albumId") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase (.String "albumId") }}
                       {{ end }}
                       {{ $grabbed = true }}
                       {{ $title = $album.String "title" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $datetype = "Downloaded" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $summary = $album.String "overview" }}
                       {{ $popoverTitle = $album.String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = $artist.String "overview" }}
  
                     {{ else }}
                       {{ $artist = .Get "artist" }}
                       {{ $album = .Get "album" }}
                       {{ if eq $type "missing" }}
                         {{ $datetype = "Released" }}
                       {{ else }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                       {{ range .Array "releases" }}
                         {{ $albumId = .String "albumId" }}
                         {{ break }}
                       {{ end }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase $albumId $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase $albumId }}
                       {{ end }}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $summary = $album.String "overview" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "artist.overview" }}
                     {{ end }}
                   {{ end }}
               
                   {{ if eq $size "small" }}
                     {{ $buttonJustify = "right" }}
                     {{ $height = "9rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "9rem" }}
                     {{ else }}
                       {{ $width = "6rem" }}
                     {{ end }}
                   {{ else if eq $size "medium" }}
                     {{ $height = "12rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "12rem" }}
                     {{ else }}
                       {{ $width = "8rem" }}
                     {{ end }}
                   {{ else if eq $size "large" }} 
                     {{ $height = "15rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "15rem" }}
                     {{ else }}
                       {{ $width = "10rem" }}
                     {{ end }}
                   {{ else if eq $size "huge" }} 
                     {{ $height = "18rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "18rem" }}
                     {{ else }}
                       {{ $width = "12rem" }}
                     {{ end }}
                   {{ end }}
           
                   <li style="position: relative;">
                     <div class="flex gap-10 items-start thumbnail-container thumbnail-parent">
                       <div>
                         <div data-popover-type="html" data-popover-position="above" data-popover-show-delay="500" style="width: {{ $width  }}; height: {{ $height }}; align-content: center;">
                           <div data-popover-html>
                             <div style="margin: 5px;">
                               <strong class="size-h4 color-primary" title="{{ $popoverTitle }}">{{ $popoverTitle }}</strong>
                               <div class="size-h4 text-truncate text-very-compact color-subdue" title="{{ $popoverSubtitle }}">{{ $popoverSubtitle }}</div>
                               <p class="margin-top-20" style="overflow-y: auto; text-align: justify; max-height: 20rem;">
                                 {{ if ne $popoverSummary "" }}
                                   {{ $popoverSummary }}
                                 {{ else }}
                                   TBA
                                 {{ end }}
                               </p>
                              {{ if gt (len ($genres.Array "")) 0 }}
                               <ul class="attachments margin-top-20">
                                 {{ range $genres.Array "" }}
                                   <li>{{ .String "" }}</li>
                                 {{ end }}
                               </ul>
                               {{ end }}
                             </div>
                           </div>
                           <img class="thumbnail" src="{{ $coverUrl }}" alt="Cover for {{ .String "title" }}" loading="lazy" style="width: 100%; height: 100%; box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); object-fit: cover; border-radius: 0.5rem;">
                         </div>
                     </div>
                       <div class="shrink min-width-0" style="height: 9rem; position: relative; padding-top: 5px; padding-right: 5px;">
                         <strong class="size-h4 block text-truncate color-primary" title="{{ $title }}">{{ $title }}</strong>
                         <div class="text-truncate text-very-compact" title="{{ $subtitle }}">{{ $subtitle }}</div>
                         <div class="text-very-compact text-truncate">
                           {{ if eq $service "sonarr" }}
                             <div>{{ $seString }} - {{ $datetype }} {{ $date.Format "1/2 03:04PM" }}</div>
                           {{ else }}
                             <span>{{ $datetype }} {{ $date.Format "1/2" }}</span>
                           {{ end }}
                         </div>
           
                         {{ if $showGrabbed }}
                           {{ if eq $buttonJustify "right" }}
                             </div>
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="position: absolute; bottom: 1rem; right: 1rem;
                                 {{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                           {{ else }}
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="{{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                             </div>
                           {{ end }}
                         {{ else }}
                           <div class="{{ if eq $size "small" }}text-truncate{{ if eq $service "radarr" }} margin-top-5{{ end }}{{ else }}text-truncate-2-lines margin-top-5{{ end }}">
                             {{ $summary }}
                           </div>
                         {{ end }}
                     </div>
                   </li>
                 {{ end }}
               {{ end }}
               {{ if not $itemDisplayed }}
                 <li>No items found.</li>
               {{ end }}
             </ul>
           {{ end }}

        - type: custom-api
          title: Series Releases
          title-url: ${SONARR_URL}
          cache: 30m
          options:
            service: sonarr          # sonarr, radarr, or lidarr
            type: upcoming           # upcoming, recent, or missing
            size: small             # small, medium, large, or huge
            collapse-after: 3
            show-grabbed: false
            interval: 20             # optional, days
            #sort-time: asc          # optional, asc or desc (default)
            #cover-proxy: "https://proxy.example.com/radarrcover" # optional
            api-base-url: ${SONARR_API_URL}
            key: ${SONARR_KEY}
            url: ${SONARR_URL}       # optional
          template: |
           {{ $collapseAfter := .Options.IntOr "collapse-after" 5 }}
           {{ $showGrabbed := .Options.BoolOr "show-grabbed" false }}
           {{ $sortTime := .Options.StringOr "sort-time" "desc" }}
           {{ $coverProxy := .Options.StringOr "cover-proxy" "" }}
           {{ $size := .Options.StringOr "size" "medium" }}
           {{ $service := .Options.StringOr "service" "" }}
           {{ $type := .Options.StringOr "type" "" }}
           {{ $intervalH := .Options.IntOr "interval" 0 | mul 24 }}

           {{ $now := now | formatTime "2006-01-02T15:04:05" }}
           {{ $posInterval := (offsetNow (printf "+%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}
           {{ $negInterval := (offsetNow (printf "-%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}

           {{ $apiBaseUrl := .Options.StringOr "api-base-url" "" }}
           {{ $key := .Options.StringOr "key" "" }}
           {{ $url := .Options.StringOr "url" $apiBaseUrl }}

           {{ if or (and (ne $service "sonarr") (ne $service "radarr") (ne $service "lidarr"))
                    (and (ne $type "upcoming") (ne $type "recent") (ne $type "missing")) 
                    (eq $apiBaseUrl "") (eq $key "") (eq $url "") }}
             <div class="widget-error-header">
                 <div class="color-negative size-h3">ERROR</div>
                 <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
                   <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
                 </svg>
               </div>
               <p class="break-all">
                 Some options are not set or malformed
                   <table style="border-spacing: 1rem;">
                     <tr><td>service</td><td>{{ $service }}</td><td>must be sonarr, radarr, or lidarr</td></tr>
                     <tr><td>type</td><td>{{ $type }}</td><td>must be upcoming, recent, or missing</td></tr>
                     <tr><td>api-base-url</td><td>{{ $apiBaseUrl }}</td><td>should include http(s):// and port if needed</td></tr>
                     <tr><td>key</td><td>{{ $key }}</td><td></td></tr>
                   </table> 
               </p>
           {{ else }}
             {{ $requestUrl := "" }}
  
             {{ if eq $service "sonarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeSeries=true&includeEpisode=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50&includeSeries=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?includeSeries=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "radarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeMovie=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "lidarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v1/history/since?includeArtist=true&includeAlbum=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v1/wanted/missing?page=1&pageSize=50&includeArtist=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v1/calendar?includeArtist=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
             {{ end }}
  
             {{ $data := newRequest $requestUrl
               | withHeader "Accept" "application/json"
               | withHeader "X-Api-Key" $key
               | getResponse }}
  
             <ul class="list list-gap-14 collapsible-container single-line-titles" data-collapse-after="{{ $collapseAfter }}">
               {{ $array := "" }}
               {{ $sortByField := "" }}
               {{ $itemDisplayed := false }}
               {{ $itemDate := "" }}
               {{ $isAvailable := false }}
  
               {{ if eq $type "missing" }}
                 {{ $array = "records" }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ else if eq $type "recent" }}
                 {{ $sortByField = "date" }}
               {{ else }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ end }}
  
               {{ range $data.JSON.Array $array | sortByTime $sortByField "rfc3339" $sortTime }}
                  
                 {{ if eq $service "sonarr" }}
                   {{ $itemDate = .String "airDateUtc" | parseTime "RFC3339" }}
                   {{ $itemDate = $itemDate.In now.Location | formatTime "2006-01-02T15:04:05" }}
                   {{ $isAvailable = true }}
                 {{ else if eq $service "radarr"}}
                   {{ $isAvailable = .Bool "isAvailable" }}
                   {{ $itemDate = .String "releaseDate" }}
                 {{ else if eq $service "lidarr"}}
                   {{ $itemDate = .String "releaseDate" }}
                   {{ $isAvailable = true }}
                 {{ end }}
  
                 {{ if or (eq $type "upcoming") (eq $type "recent") (and (or (and (gt $itemDate $negInterval) ((lt $itemDate $now ))) (eq $intervalH 0))  $isAvailable) }}
                   {{ $itemDisplayed = true }}
                   {{ $title := "" }}
                   {{ $subtitle := "" }}
                   {{ $coverUrl := "" }}
                   {{ $status := "" }}
                   {{ $coverBase := "" }}
                   {{ $height := "" }}
                   {{ $width := "" }}
                   {{ $popoverTitle := "" }}
                   {{ $popoverSubtitle := "" }}
                   {{ $popoverSummary := "" }}
                   {{ $summary := "" }}
                   {{ $link := "" }}
                   {{ $grabbed := false }}
                   {{ $date := now }}
                   {{ $datetype := "" }}
                   {{ $seString := "" }}
                   {{ $genres := "" }}
                   {{ $buttonJustify := "left" }}
  
           
                   {{ if eq $service "sonarr" }}
                     {{ $series := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "seriesId") $key }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "seriesId") }}
                     {{ end }}
                     {{ $title = .String "series.title" }}
                     {{ $link = printf "%s/series/%s#" $url (.String "series.titleSlug") }}
                     {{ $series = .Get "series" }}
                     {{ $genres = $series.Get "genres" }}
                    
                     {{ if eq $type "recent" }}
                       {{ $date = .String "date" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "episode.title" }}
                       {{ $summary = .String "episode.overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "episode.seasonNumber") (.Int "episode.episodeNumber") }}
                       {{ $datetype = "Downloaded" }}
               
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "episode.title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "episode.overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
           
                     {{ else if eq $type "missing" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Aired" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ else if eq $type "upcoming" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Airs" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ end }}
               
               
                   {{ else if eq $service "radarr" }}
                     {{ $movie := "" }}
                     {{ $status = .String "status" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
                     {{ if eq $status "announced"}}
                       {{ if ne (.String "inCinemas") "" }}
                         {{ $date = (.String "inCinemas" | parseTime "RFC3339") }}
                         {{ $datetype = "In Cinemas" }}
                       {{ else }}
                         {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                     {{ else if eq $status "inCinemas"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Releases" }}
                     {{ else if eq $status "released"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Released" }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "movie.id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "movie.id") }}
                       {{ end }}
                       {{ $datetype = "Downloaded" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $title = .String "movie.title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "movie.overview" }}
                       {{ $popoverTitle = .String "movie.title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "movie.overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "movie.titleSlug") }}
                       {{ $movie = .Get "movie" }}
                       {{ $genres = $movie.Get "genres" }}
                       {{ if and $showGrabbed (gt (.Int "movie.movieFileId") 0) }}
                         {{ $grabbed = true }}
                       {{ end }}
                     {{ else }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "id") }}
                       {{ end }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "titleSlug") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "overview" }}
                       {{ $genres = .Get "genres" }}
                       {{ if eq $type "missing" }}
                         {{ if and $showGrabbed (.Bool "movie.hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ if and $showGrabbed (.Bool "hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ end }}
                     {{ end }}
  
               
                   {{ else if eq $service "lidarr" }}
                     {{ $artist := "" }}
                     {{ $album := "" }}
                     {{ $albumId := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v1/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ $album = .Get "album" }}
                       {{ $artist = $album.Get "artist" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase (.String "albumId") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase (.String "albumId") }}
                       {{ end }}
                       {{ $grabbed = true }}
                       {{ $title = $album.String "title" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $datetype = "Downloaded" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $summary = $album.String "overview" }}
                       {{ $popoverTitle = $album.String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = $artist.String "overview" }}
  
                     {{ else }}
                       {{ $artist = .Get "artist" }}
                       {{ $album = .Get "album" }}
                       {{ if eq $type "missing" }}
                         {{ $datetype = "Released" }}
                       {{ else }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                       {{ range .Array "releases" }}
                         {{ $albumId = .String "albumId" }}
                         {{ break }}
                       {{ end }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase $albumId $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase $albumId }}
                       {{ end }}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $summary = $album.String "overview" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "artist.overview" }}
                     {{ end }}
                   {{ end }}
               
                   {{ if eq $size "small" }}
                     {{ $buttonJustify = "right" }}
                     {{ $height = "9rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "9rem" }}
                     {{ else }}
                       {{ $width = "6rem" }}
                     {{ end }}
                   {{ else if eq $size "medium" }}
                     {{ $height = "12rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "12rem" }}
                     {{ else }}
                       {{ $width = "8rem" }}
                     {{ end }}
                   {{ else if eq $size "large" }} 
                     {{ $height = "15rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "15rem" }}
                     {{ else }}
                       {{ $width = "10rem" }}
                     {{ end }}
                   {{ else if eq $size "huge" }} 
                     {{ $height = "18rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "18rem" }}
                     {{ else }}
                       {{ $width = "12rem" }}
                     {{ end }}
                   {{ end }}
           
                   <li style="position: relative;">
                     <div class="flex gap-10 items-start thumbnail-container thumbnail-parent">
                       <div>
                         <div data-popover-type="html" data-popover-position="above" data-popover-show-delay="500" style="width: {{ $width  }}; height: {{ $height }}; align-content: center;">
                           <div data-popover-html>
                             <div style="margin: 5px;">
                               <strong class="size-h4 color-primary" title="{{ $popoverTitle }}">{{ $popoverTitle }}</strong>
                               <div class="size-h4 text-truncate text-very-compact color-subdue" title="{{ $popoverSubtitle }}">{{ $popoverSubtitle }}</div>
                               <p class="margin-top-20" style="overflow-y: auto; text-align: justify; max-height: 20rem;">
                                 {{ if ne $popoverSummary "" }}
                                   {{ $popoverSummary }}
                                 {{ else }}
                                   TBA
                                 {{ end }}
                               </p>
                              {{ if gt (len ($genres.Array "")) 0 }}
                               <ul class="attachments margin-top-20">
                                 {{ range $genres.Array "" }}
                                   <li>{{ .String "" }}</li>
                                 {{ end }}
                               </ul>
                               {{ end }}
                             </div>
                           </div>
                           <img class="thumbnail" src="{{ $coverUrl }}" alt="Cover for {{ .String "title" }}" loading="lazy" style="width: 100%; height: 100%; box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); object-fit: cover; border-radius: 0.5rem;">
                         </div>
                     </div>
                       <div class="shrink min-width-0" style="height: 9rem; position: relative; padding-top: 5px; padding-right: 5px;">
                         <strong class="size-h4 block text-truncate color-primary" title="{{ $title }}">{{ $title }}</strong>
                         <div class="text-truncate text-very-compact" title="{{ $subtitle }}">{{ $subtitle }}</div>
                         <div class="text-very-compact text-truncate">
                           {{ if eq $service "sonarr" }}
                             <div>{{ $seString }} - {{ $datetype }} {{ $date.Format "1/2 03:04PM" }}</div>
                           {{ else }}
                             <span>{{ $datetype }} {{ $date.Format "1/2" }}</span>
                           {{ end }}
                         </div>
           
                         {{ if $showGrabbed }}
                           {{ if eq $buttonJustify "right" }}
                             </div>
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="position: absolute; bottom: 1rem; right: 1rem;
                                 {{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                           {{ else }}
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="{{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                             </div>
                           {{ end }}
                         {{ else }}
                           <div class="{{ if eq $size "small" }}text-truncate{{ if eq $service "radarr" }} margin-top-5{{ end }}{{ else }}text-truncate-2-lines margin-top-5{{ end }}">
                             {{ $summary }}
                           </div>
                         {{ end }}
                     </div>
                   </li>
                 {{ end }}
               {{ end }}
               {{ if not $itemDisplayed }}
                 <li>No items found.</li>
               {{ end }}
             </ul>
           {{ end }}

        - type: custom-api
          title: Music Releases
          title-url: ${LIDARR_URL}
          cache: 30m
          options:
            service: lidarr          # sonarr, radarr, or lidarr
            type: upcoming           # upcoming, recent, or missing
            size: small             # small, medium, large, or huge
            collapse-after: 3
            show-grabbed: true
            interval: 20             # optional, days
            #sort-time: asc          # optional, asc or desc (default)
            #cover-proxy: "https://proxy.example.com/radarrcover" # optional
            api-base-url: ${LIDARR_API_URL}
            key: ${LIDARR_KEY}
            url: ${LIDARR_URL}       # optional
          template: |
           {{ $collapseAfter := .Options.IntOr "collapse-after" 5 }}
           {{ $showGrabbed := .Options.BoolOr "show-grabbed" false }}
           {{ $sortTime := .Options.StringOr "sort-time" "desc" }}
           {{ $coverProxy := .Options.StringOr "cover-proxy" "" }}
           {{ $size := .Options.StringOr "size" "medium" }}
           {{ $service := .Options.StringOr "service" "" }}
           {{ $type := .Options.StringOr "type" "" }}
           {{ $intervalH := .Options.IntOr "interval" 0 | mul 24 }}

           {{ $now := now | formatTime "2006-01-02T15:04:05" }}
           {{ $posInterval := (offsetNow (printf "+%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}
           {{ $negInterval := (offsetNow (printf "-%dh" $intervalH)) | formatTime "2006-01-02T15:04:05" }}

           {{ $apiBaseUrl := .Options.StringOr "api-base-url" "" }}
           {{ $key := .Options.StringOr "key" "" }}
           {{ $url := .Options.StringOr "url" $apiBaseUrl }}

           {{ if or (and (ne $service "sonarr") (ne $service "radarr") (ne $service "lidarr"))
                    (and (ne $type "upcoming") (ne $type "recent") (ne $type "missing")) 
                    (eq $apiBaseUrl "") (eq $key "") (eq $url "") }}
             <div class="widget-error-header">
                 <div class="color-negative size-h3">ERROR</div>
                 <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
                   <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
                 </svg>
               </div>
               <p class="break-all">
                 Some options are not set or malformed
                   <table style="border-spacing: 1rem;">
                     <tr><td>service</td><td>{{ $service }}</td><td>must be sonarr, radarr, or lidarr</td></tr>
                     <tr><td>type</td><td>{{ $type }}</td><td>must be upcoming, recent, or missing</td></tr>
                     <tr><td>api-base-url</td><td>{{ $apiBaseUrl }}</td><td>should include http(s):// and port if needed</td></tr>
                     <tr><td>key</td><td>{{ $key }}</td><td></td></tr>
                   </table> 
               </p>
           {{ else }}
             {{ $requestUrl := "" }}
  
             {{ if eq $service "sonarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeSeries=true&includeEpisode=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50&includeSeries=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?includeSeries=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "radarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v3/history/since?includeMovie=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v3/calendar?start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
               
             {{ else if eq $service "lidarr" }}
               {{ if eq $type "recent" }}
                 {{ $requestUrl = printf "%s/api/v1/history/since?includeArtist=true&includeAlbum=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
               {{ else if eq $type "missing" }}
                 {{ $requestUrl = printf "%s/api/v1/wanted/missing?page=1&pageSize=50&includeArtist=true" $apiBaseUrl }}
               {{ else if eq $type "upcoming" }}
                 {{ $requestUrl = printf "%s/api/v1/calendar?includeArtist=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
               {{ end }}
             {{ end }}
  
             {{ $data := newRequest $requestUrl
               | withHeader "Accept" "application/json"
               | withHeader "X-Api-Key" $key
               | getResponse }}
  
             <ul class="list list-gap-14 collapsible-container single-line-titles" data-collapse-after="{{ $collapseAfter }}">
               {{ $array := "" }}
               {{ $sortByField := "" }}
               {{ $itemDisplayed := false }}
               {{ $itemDate := "" }}
               {{ $isAvailable := false }}
  
               {{ if eq $type "missing" }}
                 {{ $array = "records" }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ else if eq $type "recent" }}
                 {{ $sortByField = "date" }}
               {{ else }}
                 {{ if eq $service "sonarr" }}
                   {{ $sortByField = "airDateUtc" }}
                 {{ else }}
                   {{ $sortByField = "releaseDate" }}
                 {{ end }}
               {{ end }}
  
               {{ range $data.JSON.Array $array | sortByTime $sortByField "rfc3339" $sortTime }}
                  
                 {{ if eq $service "sonarr" }}
                   {{ $itemDate = .String "airDateUtc" | parseTime "RFC3339" }}
                   {{ $itemDate = $itemDate.In now.Location | formatTime "2006-01-02T15:04:05" }}
                   {{ $isAvailable = true }}
                 {{ else if eq $service "radarr"}}
                   {{ $isAvailable = .Bool "isAvailable" }}
                   {{ $itemDate = .String "releaseDate" }}
                 {{ else if eq $service "lidarr"}}
                   {{ $itemDate = .String "releaseDate" }}
                   {{ $isAvailable = true }}
                 {{ end }}
  
                 {{ if or (eq $type "upcoming") (eq $type "recent") (and (or (and (gt $itemDate $negInterval) ((lt $itemDate $now ))) (eq $intervalH 0))  $isAvailable) }}
                   {{ $itemDisplayed = true }}
                   {{ $title := "" }}
                   {{ $subtitle := "" }}
                   {{ $coverUrl := "" }}
                   {{ $status := "" }}
                   {{ $coverBase := "" }}
                   {{ $height := "" }}
                   {{ $width := "" }}
                   {{ $popoverTitle := "" }}
                   {{ $popoverSubtitle := "" }}
                   {{ $popoverSummary := "" }}
                   {{ $summary := "" }}
                   {{ $link := "" }}
                   {{ $grabbed := false }}
                   {{ $date := now }}
                   {{ $datetype := "" }}
                   {{ $seString := "" }}
                   {{ $genres := "" }}
                   {{ $buttonJustify := "left" }}
  
           
                   {{ if eq $service "sonarr" }}
                     {{ $series := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "seriesId") $key }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                       {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "seriesId") }}
                     {{ end }}
                     {{ $title = .String "series.title" }}
                     {{ $link = printf "%s/series/%s#" $url (.String "series.titleSlug") }}
                     {{ $series = .Get "series" }}
                     {{ $genres = $series.Get "genres" }}
                    
                     {{ if eq $type "recent" }}
                       {{ $date = .String "date" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "episode.title" }}
                       {{ $summary = .String "episode.overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "episode.seasonNumber") (.Int "episode.episodeNumber") }}
                       {{ $datetype = "Downloaded" }}
               
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "episode.title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "episode.overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
           
                     {{ else if eq $type "missing" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Aired" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "episode.hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ else if eq $type "upcoming" }}
                       {{ $date = .String "airDateUtc" | parseLocalTime "RFC3339" }}
                       {{ $date = $date.In now.Location }}
                       {{ $subtitle = .String "title" }}
                       {{ $summary = .String "overview" }}
                       {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                       {{ $datetype = "Airs" }}
                       {{ if $showGrabbed }}
                         {{ $popoverTitle = .String "title" }}
                         {{ $popoverSubtitle = $seString }}
                         {{ $popoverSummary = .String "overview" }}
                         {{ if .Bool "hasFile" }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ $popoverTitle = .String "series.title" }}
                         {{ $popoverSummary = .String "series.overview" }}
                       {{ end }}
                     {{ end }}
               
               
                   {{ else if eq $service "radarr" }}
                     {{ $movie := "" }}
                     {{ $status = .String "status" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v3/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
                     {{ if eq $status "announced"}}
                       {{ if ne (.String "inCinemas") "" }}
                         {{ $date = (.String "inCinemas" | parseTime "RFC3339") }}
                         {{ $datetype = "In Cinemas" }}
                       {{ else }}
                         {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                     {{ else if eq $status "inCinemas"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Releases" }}
                     {{ else if eq $status "released"}}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $datetype = "Released" }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "movie.id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "movie.id") }}
                       {{ end }}
                       {{ $datetype = "Downloaded" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $title = .String "movie.title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "movie.overview" }}
                       {{ $popoverTitle = .String "movie.title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "movie.overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "movie.titleSlug") }}
                       {{ $movie = .Get "movie" }}
                       {{ $genres = $movie.Get "genres" }}
                       {{ if and $showGrabbed (gt (.Int "movie.movieFileId") 0) }}
                         {{ $grabbed = true }}
                       {{ end }}
                     {{ else }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "id") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "id") }}
                       {{ end }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = "" }}
                       {{ $summary = .String "overview" }}
                       {{ $link = printf "%s/movie/%s#" $url (.String "titleSlug") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "overview" }}
                       {{ $genres = .Get "genres" }}
                       {{ if eq $type "missing" }}
                         {{ if and $showGrabbed (.Bool "movie.hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ else }}
                         {{ if and $showGrabbed (.Bool "hasFile") }}
                           {{ $grabbed = true }}
                         {{ end }}
                       {{ end }}
                     {{ end }}
  
               
                   {{ else if eq $service "lidarr" }}
                     {{ $artist := "" }}
                     {{ $album := "" }}
                     {{ $albumId := "" }}
                     {{ if eq $coverProxy "" }}
                       {{ $coverBase = printf "%s/api/v1/mediacover" $apiBaseUrl }}
                     {{ else }}
                       {{ $coverBase = $coverProxy }}
                     {{ end }}
           
                     {{ if eq $type "recent" }}
                       {{ $album = .Get "album" }}
                       {{ $artist = $album.Get "artist" }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase (.String "albumId") $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase (.String "albumId") }}
                       {{ end }}
                       {{ $grabbed = true }}
                       {{ $title = $album.String "title" }}
                       {{ $date = (.String "date" | parseTime "RFC3339") }}
                       {{ $datetype = "Downloaded" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $summary = $album.String "overview" }}
                       {{ $popoverTitle = $album.String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = $artist.String "overview" }}
  
                     {{ else }}
                       {{ $artist = .Get "artist" }}
                       {{ $album = .Get "album" }}
                       {{ if eq $type "missing" }}
                         {{ $datetype = "Released" }}
                       {{ else }}
                         {{ $datetype = "Releases" }}
                       {{ end }}
                       {{ range .Array "releases" }}
                         {{ $albumId = .String "albumId" }}
                         {{ break }}
                       {{ end }}
                       {{ if eq $coverProxy "" }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase $albumId $key }}
                       {{ else }}
                         {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase $albumId }}
                       {{ end }}
                       {{ $date = (.String "releaseDate" | parseTime "RFC3339") }}
                       {{ $title = .String "title" }}
                       {{ $subtitle = $artist.String "artistName" }}
                       {{ $summary = $album.String "overview" }}
                       {{ $genres = $artist.Get "genres" }}
                       {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                       {{ $popoverTitle = .String "title" }}
                       {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "1/2/2006") }}
                       {{ $popoverSummary = .String "artist.overview" }}
                     {{ end }}
                   {{ end }}
               
                   {{ if eq $size "small" }}
                     {{ $buttonJustify = "right" }}
                     {{ $height = "9rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "9rem" }}
                     {{ else }}
                       {{ $width = "6rem" }}
                     {{ end }}
                   {{ else if eq $size "medium" }}
                     {{ $height = "12rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "12rem" }}
                     {{ else }}
                       {{ $width = "8rem" }}
                     {{ end }}
                   {{ else if eq $size "large" }} 
                     {{ $height = "15rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "15rem" }}
                     {{ else }}
                       {{ $width = "10rem" }}
                     {{ end }}
                   {{ else if eq $size "huge" }} 
                     {{ $height = "18rem" }}
                     {{ if eq $service "lidarr" }}
                       {{ $width = "18rem" }}
                     {{ else }}
                       {{ $width = "12rem" }}
                     {{ end }}
                   {{ end }}
           
                   <li style="position: relative;">
                     <div class="flex gap-10 items-start thumbnail-container thumbnail-parent">
                       <div>
                         <div data-popover-type="html" data-popover-position="above" data-popover-show-delay="500" style="width: {{ $width  }}; height: {{ $height }}; align-content: center;">
                           <div data-popover-html>
                             <div style="margin: 5px;">
                               <strong class="size-h4 color-primary" title="{{ $popoverTitle }}">{{ $popoverTitle }}</strong>
                               <div class="size-h4 text-truncate text-very-compact color-subdue" title="{{ $popoverSubtitle }}">{{ $popoverSubtitle }}</div>
                               <p class="margin-top-20" style="overflow-y: auto; text-align: justify; max-height: 20rem;">
                                 {{ if ne $popoverSummary "" }}
                                   {{ $popoverSummary }}
                                 {{ else }}
                                   TBA
                                 {{ end }}
                               </p>
                              {{ if gt (len ($genres.Array "")) 0 }}
                               <ul class="attachments margin-top-20">
                                 {{ range $genres.Array "" }}
                                   <li>{{ .String "" }}</li>
                                 {{ end }}
                               </ul>
                               {{ end }}
                             </div>
                           </div>
                           <img class="thumbnail" src="{{ $coverUrl }}" alt="Cover for {{ .String "title" }}" loading="lazy" style="width: 100%; height: 100%; box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); object-fit: cover; border-radius: 0.5rem;">
                         </div>
                     </div>
                       <div class="shrink min-width-0" style="height: 9rem; position: relative; padding-top: 5px; padding-right: 5px;">
                         <strong class="size-h4 block text-truncate color-primary" title="{{ $title }}">{{ $title }}</strong>
                         <div class="text-truncate text-very-compact" title="{{ $subtitle }}">{{ $subtitle }}</div>
                         <div class="text-very-compact text-truncate">
                           {{ if eq $service "sonarr" }}
                             <div>{{ $seString }} - {{ $datetype }} {{ $date.Format "1/2 03:04PM" }}</div>
                           {{ else }}
                             <span>{{ $datetype }} {{ $date.Format "1/2" }}</span>
                           {{ end }}
                         </div>
           
                         {{ if $showGrabbed }}
                           {{ if eq $buttonJustify "right" }}
                             </div>
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="position: absolute; bottom: 1rem; right: 1rem;
                                 {{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                           {{ else }}
                             <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                               style="{{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                                 font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                             {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                             </a>
                             </div>
                           {{ end }}
                         {{ else }}
                           <div class="{{ if eq $size "small" }}text-truncate{{ if eq $service "radarr" }} margin-top-5{{ end }}{{ else }}text-truncate-2-lines margin-top-5{{ end }}">
                             {{ $summary }}
                           </div>
                         {{ end }}
                     </div>
                   </li>
                 {{ end }}
               {{ end }}
               {{ if not $itemDisplayed }}
                 <li>No items found.</li>
               {{ end }}
             </ul>
           {{ end }}

    - size: full
      widgets:
        - type: custom-api
          title: "Jellyfin Stats"
          base-url: http://10.0.40.20:8096
          options:
            url: http://10.0.40.20:8096
            key: ed1472a3abf14fe68d93b81b5acb7611

          template: |
            {{ $url := .Options.StringOr "url" "" }}
            {{ $key := .Options.StringOr "key" "" }}

            {{- if or (eq $url "") (eq $key "") -}}
    
              <p>Error: The URL or API Key was not configured in the widget options.</p>
      
            {{- else -}}

              {{- $requestUrl := printf "%s/emby/Items/Counts?api_key=%s" $url $key -}}
              {{- $jellyfinData := newRequest $requestUrl | getResponse -}}

              {{- if eq $jellyfinData.Response.StatusCode 200 -}}
                <div class="flex flex-column gap-5">
                  <div class="flex justify-between text-center">
            
                  <div>
                    <div class="color-highlight size-h3">{{ $jellyfinData.JSON.Int "MovieCount" | formatNumber }}</div>
                    <div class="size-h5 uppercase">Movies</div>
                  </div>

                  <div>
                    <div class="color-highlight size-h3">{{ $jellyfinData.JSON.Int "SeriesCount" | formatNumber }}</div>
                    <div class="size-h5 uppercase">TV Shows</div>
                  </div>

                  <div>
                    <div class="color-highlight size-h3">{{ $jellyfinData.JSON.Int "EpisodeCount" | formatNumber }}</div>
                    <div class="size-h5 uppercase">Episodes</div>
                  </div>

                  <div>
                    <div class="color-highlight size-h3">{{ $jellyfinData.JSON.Int "SongCount" | formatNumber }}</div>
                    <div class="size-h5 uppercase">Songs</div>
                  </div>

                  </div>
                </div>
                {{- else -}}
              <p>Failed: {{ $jellyfinData.Response.Status }}</p>
                {{- end -}}
              {{- end -}}      

        - type: monitor
          cache: 1m
          title: Frontend Services
          sites:
            - title: devBoer's Jellyfin
              url: https://jellyfin.int.devboer.com
              icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/jellyfin.png # ../assets/icons/jellyfin-light.png
            - title: Navidrome
              url: https://music.int.devboer.com 
              icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/navidrome.png # ../assets/icons/navidrome.png
            - title: Request (devBoer)
              url: https://new.arr.devboer.com # http://10.0.40.22:5055
              icon: https://cdn.jsdelivr.net/gh/selfhst/icons/png/jellyseerr.png # ../assets/icons/jellyseerr-light.png

        - type: monitor
          cache: 1m
          title: Manage Libraries
          sites:
            - title: Music
              url: https://lid.arr.devboer.com # http://10.0.40.26:8686
              icon: ../assets/icons/lidarr-radarr.png
            - title: Movies
              url: https://rad.arr.devboer.com # http://10.0.40.23:7878
              icon: ../assets/icons/radarr.png
            - title: Series
              url: https://son.arr.devboer.com # http://10.0.40.28:8989
              icon: ../assets/icons/sonarr-radarr.png
            - title: Comics
              url: https://myl.arr.devboer.com # http://10.0.40.41:8090
              icon: ../assets/icons/mylar3.png
            - title: XXX
              url: https://whisp.arr.devboer.com # http://10.0.40.18:6969
              icon: ../assets/icons/whisparr.png
        - type: monitor
          cache: 1m
          title: Process Media
          sites:
            - title: Transcode
              url: https://td.arr.devboer.com/#/ # http://10.0.40.27:8265
              icon: ../assets/icons/tdarr.png
            - title: NZBget
              url: https://nzb.arr.devboer.com # http://10.0.40.29:6789
              icon: ../assets/icons/nzbget.png
              basic-auth:
                username: nzbget
                password: ${NZB_PASS}              
            - title: YouTube
              url: https://yout.arr.devboer.com # http://10.0.40.21:8081
              icon: ../assets/icons/youtarr.png
            - title: CleanupArr
              url: https://cleanup.arr.devboer.com # http://10.0.40.17:11011
              icon: ../assets/icons/cleanuparr.png

